---
title: "Compare chl a and sym # in bleached and healthy corals"
format: html
editor: visual
---

## Compare chl a and sym numbers in bleached and healthy corals

```{r}
library(tidyverse)
library(here)
library(car)
library(emmeans)
library(paletteer)
library(multcomp)
library(patchwork)
```

data

```{r}
# d_pysio_before <- read.csv(here("physio/data/clean/before_bleaching.csv"),) %>% 
#   mutate(t = "before")

d_pysio_during <- read.csv(here("physio/data/clean/during_bleaching.csv")) %>% 
  mutate(t = "after")


d_state <- read.csv(here("overview/data/2024_05_15_sample_list_Charlotte.csv")) %>% 
  dplyr::select(sample_id, state_short)


# d_pysio_before <- d_pysio_before %>% 
#   mutate(state_short = "H")

d_pysio_during <- d_pysio_during %>% 
  left_join(d_state, by = "sample_id")




#dat_physio_state <- bind_rows(d_pysio_before, d_pysio_during) %>% 
dat_physio_state <- d_pysio_during %>% 
   dplyr::select(-X) %>% 
  group_by(across(c(-count_per_cm2, -chl_a_per_cm2))) %>% 
  summarise(count_per_cm2 = mean(count_per_cm2, na.rm = T),
            chl_a_per_cm2 = mean(chl_a_per_cm2, na.rm = T)) %>% 
  ungroup()
```

```{r}
dat_physio_state <- dat_physio_state %>% 
  mutate(state_short = dplyr::recode(state_short, "B" = "Bleached",
                                     "H" = "Not bleached"),
         spec = dplyr::recode(spec, 
                              "A. hya" = "A. hyacinthus",
                              "P. mea" = "P. meandrina",
                              "P. ver" = "P. verrucosa"
                              ))

```

### Chl a

```{r}
m_state_chl <- glm(chl_a_per_cm2 ~ state_short*spec, 
                   family = Gamma(),
                   data = dat_physio_state)#site was not sig
```

```{r}
Anova(m_state_chl)
```

```{r}


dat_em_m_state_chl <- emmeans(m_state_chl, 
                              pairwise ~ state_short | spec)# sig for A. hya



dat_em_m_state_chl <- dat_em_m_state_chl %>% 
  multcomp::cld(Letters = LETTERS) %>% 
  dplyr::rename("group" = ".group") %>% 
  mutate(group = trimws(group)) %>% 
  mutate(group = ifelse(spec == "A. hyacinthus", group, "")) %>% #only keep A.hya
  dplyr::select(state_short, spec, group)
```

```{r}
dat_physio_chl_stateS <- dat_physio_state %>% 
  group_by(state_short, spec) %>% 
  summarise(chl_a_per_cm2_mean = mean(chl_a_per_cm2),
            se = sd(chl_a_per_cm2)/sqrt(n())
  ) %>% 
  ungroup() %>% 
  left_join(dat_em_m_state_chl, by = c("spec", "state_short"))
```

```{r}
plot_state_chl <- dat_physio_chl_stateS %>% 
  ggplot(aes(x = state_short, col = state_short))+
  geom_point(data = dat_physio_state, 
             aes(y = chl_a_per_cm2, shape = site), 
             position = position_jitterdodge(jitter.width = .2, dodge.width = .5))+
  geom_errorbar(aes(ymin = chl_a_per_cm2_mean - se, 
                    ymax = chl_a_per_cm2_mean + se),
                position = position_dodge(width  = .5),
                width = .2, 
             show.legend = F)+
  geom_point(aes(y = chl_a_per_cm2_mean), 
             fill = "white",
             shape = 21,
             stroke = 1,
             size = 3,
             position = position_dodge(width  = .5 ), 
             show.legend = F)+
  geom_text(aes(y = chl_a_per_cm2_mean + se, label = group), size = 5, vjust = -.8, col = "black")+
  scale_color_manual(values = c("grey50", "#4E84C4"), 
                     name = "Bleaching status",
                     guide = "none")+
  labs(x = NULL, y = expression("Chlorophyll"~italic(a)~"(Âµg "*cm^2*")"), tag = "A")+
  scale_shape_manual(values = c(16,17), name = "Site")+
  facet_wrap(~spec)+
  theme_minimal()+
  theme(strip.text.x = element_text(face = "italic"),
        legend.position = "bottom")
plot_state_chl
```

Save
```{r}
ggsave(filename = "plot_state_chl.pdf",
       plot = plot_state_chl, 
       path = here("physio/plots"),
       width = 18, height = 10, units = "cm")
```


### sym

```{r}
m_state_sym <- glm(count_per_cm2 ~ state_short*spec, 
                   family = Gamma(),
                   data = dat_physio_state)#site was not sig
```

```{r}
Anova(m_state_sym)
```

```{r}


dat_em_m_state_sym <- emmeans(m_state_sym, 
                              pairwise ~ state_short | spec)# sig for A. hya



dat_em_m_state_sym <- dat_em_m_state_sym %>% 
  multcomp::cld(Letters = LETTERS) %>% 
  dplyr::rename("group" = ".group") %>% 
  mutate(group = trimws(group)) %>% 
  mutate(group = ifelse(spec == "A. hyacinthus", group, "")) %>% #only keep A.hya
  dplyr::select(state_short, spec, group)
```

```{r}
dat_physio_sym_stateS <- dat_physio_state %>% 
  group_by(state_short, spec) %>% 
  summarise(count_per_cm2_mean = mean(count_per_cm2),
            se = sd(count_per_cm2)/sqrt(n())
  ) %>% 
  ungroup() %>% 
  left_join(dat_em_m_state_sym, by = c("spec", "state_short"))
```

```{r}
plot_state_sym <- dat_physio_sym_stateS %>% 
  ggplot(aes(x = state_short, col = state_short))+
  geom_point(data = dat_physio_state, 
             aes(y = count_per_cm2, shape = site), 
             position = position_jitterdodge(jitter.width = .2, dodge.width = .5))+
  geom_errorbar(aes(ymin = count_per_cm2_mean - se, 
                    ymax = count_per_cm2_mean + se),
                position = position_dodge(width  = .5),
                width = .2, 
             show.legend = F)+
  geom_point(aes(y = count_per_cm2_mean), 
             fill = "white",
             shape = 21,
             stroke = 1,
             size = 3,
             position = position_dodge(width  = .5 ), 
             show.legend = F)+
  geom_text(aes(y = count_per_cm2_mean + se, label = group), size = 5, vjust = -.8, col = "black")+
  scale_color_manual(values = c("grey50", "#4E84C4"), 
                     name = "Bleaching status",
                     guide = "none")+
  labs(x = NULL, y = expression("Number of Symbiodiniaceae"), tag = "B")+
  scale_shape_manual(values = c(16,17), name = "Site")+
  facet_wrap(~spec)+
  theme_minimal()+
  theme(strip.text.x = element_text(face = "italic"),
        legend.position = "bottom")
plot_state_sym
```

Save
```{r}
ggsave(filename = "plot_state_sym.pdf",
       plot = plot_state_sym, 
       path = here("physio/plots"),
       width = 18, height = 10, units = "cm")
```

combine

```{r}
plot_state_chl <- plot_state_chl+theme(legend.position = "None")
plot_physio_state <- plot_state_chl / plot_state_sym
plot_physio_state
```


Save
```{r}
ggsave(filename = "plot_state_physio.pdf",
       plot = plot_physio_state, 
       path = here("physio/plots"),
       width = 18, height = 18, units = "cm")
```