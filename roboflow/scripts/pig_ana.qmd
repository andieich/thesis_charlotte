---
title: "Pigmentation"
format: html
editor: visual
---

## 

```{r}
library(here)
library(tidyverse)
library(arrow)

get_sample_id <- function(data){
  keep <- names(data)
  data <- data %>% 
    separate(filename, c("y","m","d", "sample_id", "orig"), sep = "_", remove = F) %>% 
    mutate(date = paste(y, m, d, sep = "-"),
           sample_id = paste0(sample_id,"P")) %>% 
    mutate(date = as_date(date)) %>% 
    dplyr::select("sample_id", "date",  !!enquo(keep))
}

update_sample_id <- function(data){
  
  # make_long
  
  make_long <- function(sample_id){
    paste0(substr(sample_id, 1, 5),
           "0",
           substr(sample_id, 6, 8))
  }
  
  data_new <- data %>% 
    mutate(sample_id = ifelse(!is.na(sample_id) & nchar(sample_id) == 8, 
                              make_long(sample_id),
                              sample_id)
           )
  
  problems <- which(!is.na(data_new$sample_id) & nchar(data_new$sample_id) != 9)
  
  if (length(problems) > 0){
    warning(paste("Some sample_ids have not 9 digits:"), data_new$sample_id[problems])
  }
  
  return(data_new)
}

get_info <- function(data){
  data %>% 
    mutate(
      t = substr(sample_id, 1,1),
      site = substr(sample_id, 2,2),
      depth = substr(sample_id, 3,3),
      spec = substr(sample_id, 4,4),
      size = substr(sample_id, 5,5),
      replicate = as.numeric(substr(sample_id, 6,6))) %>% 
    mutate(site = dplyr::recode(site,
                         "T" = "Temae",
                         "E" = "E2B"),
           depth = dplyr::recode(depth,
                          "D" = "20 m",
                          "S" = "5 m"),
           spec = dplyr::recode(spec,
                         "A" = "A. hya",
                         "P" = "P. ver",
                         "M" = "P. mea"),
           size = dplyr::recode(size,
                         "L" = "Adult",
                         "S" = "Juvenile"))
}
```

```{r}
pig_before <- read_feather(here("roboflow/data/2024_05_24_px_data_before.feather"))
pig_during <- read_feather(here("roboflow/data/2024_05_24_px_data_during.feather"))
```

```{r}
ignore_before <- read.csv(here("roboflow/data/2025_05_24_donttake_before.csv")) %>% 
  mutate(take = "no")
ignore_during <- read.csv(here("roboflow/data/2025_05_24_donttake_during.csv"))%>% 
  mutate(take = "no")
```

```{r}
pig_before <- left_join(pig_before,ignore_before, by = "filename")

pig_before %>% 
  filter(take == "no") %>% 
  nrow()/2000
```

```{r}
pig_during <- left_join(pig_during,ignore_during, by = "filename")

pig_during %>% 
  filter(take == "no") %>% 
  nrow()/2000
```

```{r}
pig_before <- pig_before %>% 
  get_sample_id() %>% 
  update_sample_id()

pig_during <- pig_during %>% 
  get_sample_id() %>% 
  update_sample_id()


```

```{r}
# chl a
chla_before <- read.csv(here("physio/data/clean/before_bleaching.csv")) %>% 
  update_sample_id() %>% 
  group_by(sample_id) %>% 
  summarise(chl_a_per_cm2 = mean(chl_a_per_cm2, na.rm =T))
  
chla_during <- read.csv(here("physio/data/clean/during_bleaching.csv")) %>% 
  update_sample_id() %>% 
   group_by(sample_id) %>% 
  summarise(chl_a_per_cm2 = mean(chl_a_per_cm2, na.rm =T))
```

Combine

```{r}
pig_before <-  pig_before %>% 
  group_by(sample_id) %>% 
  filter(Red > 0 + 10, Red < 255 - 10,
         Green > 0 + 10, Green < 255 - 10,
         Blue > 0 + 10, Blue < 255 - 10) %>% 
  reframe(Red = sample(size = 100,replace = F,Red),
          Green = sample(size = 100,replace = F,Green),
          Blue = sample(size = 100,replace = F,Blue))

pig_during <-  pig_during %>% 
  group_by(sample_id) %>% 
  filter(Red > 0 + 10, Red < 255 - 10,
         Green > 0 + 10, Green < 255 - 10,
         Blue > 0 + 10, Blue < 255 - 10) %>% 
  reframe(Red = sample(size = 50,replace = F,Red),
          Green = sample(size = 50,replace = F,Green),
          Blue = sample(size = 50,replace = F,Blue))
```

```{r}
pig_before <- pig_before %>% 
  left_join(chla_before, by = "sample_id")

pig_during <- pig_during %>% 
  left_join(chla_during, by = "sample_id")

dat_pig <- bind_rows(pig_before, pig_during) 

dat_pig <- dat_pig %>% 
  group_by(sample_id, chl_a_per_cm2) %>% 
  reframe(Red = mean(Red, na.rm = T ), 
            Green = mean(Green, na.rm = T ), 
            Blue = mean(Blue, na.rm = T )) %>% 
  get_info()

#calculate
dat_pig <- dat_pig %>% 
  mutate(r_chro = Red /(Red + Green + Blue),
         g_chro = Green /(Red + Green + Blue),
         b_chro = Blue /(Red + Green + Blue))
```

Plots

```{r}
plot_RGB <- dat_pig %>% 
  pivot_longer(c("Red", "Green", "Blue"), names_to = "colour") %>% 
  ggplot(aes(x = value, y = chl_a_per_cm2, col = colour))+
    geom_point()+
  geom_smooth(method = "lm", se = F)+
facet_grid(colour~spec)
  
plot_RGB
```

```{r}
plot_RGB_chro <- dat_pig %>% 
  pivot_longer(c("r_chro", "g_chro", "b_chro"), names_to = "colour") %>% 
  ggplot(aes(x = value, y = chl_a_per_cm2, col = colour))+
    geom_point()+
  geom_smooth(method = "lm", se = F)+
facet_grid(colour~spec)
  
plot_RGB_chro
```

```{r}
dat_pig <- dat_pig %>% 
  mutate(VARI = (Green - Red)/(Green + Red  - Blue) )


```

```{r}
plot_VARI<- dat_pig %>% 
  filter(VARI > -20) %>% 
  ggplot(aes(x = VARI, y = chl_a_per_cm2))+
    geom_point()+
  geom_smooth(method = "lm", se = F)+
facet_grid(~spec)

plot_VARI

```

RGB log

```{r}
plot_RGB_exp <- dat_pig %>% 
  pivot_longer(c("Red", "Green", "Blue"), names_to = "colour") %>% 
  ggplot(aes(x = value, y = log(chl_a_per_cm2), col = colour))+
    geom_point(shape = 1)+
  geom_smooth(method = "lm", se = F)+
  theme_minimal()+
  facet_wrap(colour~spec, scales = "free_y")
  
plot_RGB_exp
```

```{r}
dat_pigS <- dat_pig %>% 
  group_by(sample_id) %>% 
  reframe(Red = mean(Red, na.rm = T ), 
            Green = mean(Green, na.rm = T ), 
            Blue = mean(Blue, na.rm = T ),
            chl_a_per_cm2 = chl_a_per_cm2) %>% 
  get_info()

pig_duringS <- pig_during %>% 
  group_by(sample_id) %>% 
  reframe(Red = mean(Red, na.rm = T ), 
            Green = mean(Green, na.rm = T ), 
            Blue = mean(Blue, na.rm = T ),
            chl_a_per_cm2 = chl_a_per_cm2) %>% 
  get_info()

pig_beforeS <- pig_before %>% 
  group_by(sample_id) %>% 
  reframe(Red = mean(Red, na.rm = T ), 
            Green = mean(Green, na.rm = T ), 
            Blue = mean(Blue, na.rm = T ),
            chl_a_per_cm2 = chl_a_per_cm2) %>% 
  get_info()


```

```{r}
dat_pigS %>% 
  ggplot()+
  geom_point(aes(x = Blue, y = chl_a_per_cm2), col = "blue") +
  geom_smooth(aes(x = Blue, y = chl_a_per_cm2), col = "blue", method = "lm")+
  facet_free(~spec)
```

```{r}
dat_pigS %>% 
  ggplot()+
  geom_point(aes(x = Green, y = chl_a_per_cm2), col = "green") +
  geom_smooth(aes(x = Green, y = chl_a_per_cm2), col = "green", method = "lm")+
  facet_free(~spec)+
  theme_minimal()
```

```{r}
dat_pigS %>% 
  ggplot()+
  geom_point(aes(x = Red, y = chl_a_per_cm2), col = "red") +
  geom_smooth(aes(x = Red, y = chl_a_per_cm2), col = "red", method = "lm")+
  #geom_point(aes(x = Green, y = chl_a_per_cm2), col = "green")+
  #geom_point(aes(x = Blue, y = chl_a_per_cm2), col = "blue")+
  facet_free(~spec)
```

```{r}

library(lme4)

# m <-glm(chl_a_per_cm2 ~ (Red + Green + Blue)*spec ,
#             family = Gamma(),
#             data = dat_pig)
# 
# m <-lm(log(chl_a_per_cm2) ~ (Red + Green + Blue)*spec ,
#             data = dat_pig)

dat_pig <- dat_pig %>% 
  mutate(r = Red/255,
         g = Green/255,
         b = Blue/255)

m_ah <-lm(log(chl_a_per_cm2) ~ r + g + b,
        #     family = Gamma(),
            data = filter(dat_pig, spec == "A. hya"))



library(car)
Anova(m_ah)
summary(m_ah)

```

```{r}
emtrends(m, pairwise ~ spec, var = "Red")
emtrends(m, pairwise ~ spec, var = "Green")
emtrends(m, pairwise ~ spec, var = "Blue")
```

```{r}
library(effectsize)
options(es.use_symbols = TRUE) # get nice symbols when printing! (On Windows, requires R >= 4.2.0)

eta_squared(m, partial = TRUE) 


```

```{r}

effectsize(m, ci_method="wald")
```

```{r}

pred_ah <- predict(m_ah)#

dat_pig_ah <- dat_pig %>% 
  filter(spec == "A. hya") %>% 
  mutate(pred = exp(pred_ah))

dat_pig_ah %>% 
  ggplot()+
  geom_point(aes(x = pred, y = chl_a_per_cm2, col = spec))+
  geom_abline(slope = 1, intercept = 0)+
  facet_grid(~spec)
```

```{r}

test <- predict.glm(m,
                    newdata = data.frame(expand_grid(Red = 0:255, Green = 0:255, Blue = 0:255, spec = unique(dat_pigS$spec))), 
                    se.fit = T,  
                    type="response")

```

```{r}

mat <-  data.frame(data.frame(expand_grid(Red = 0:255, Green = 0:255, Blue = 0:255)), chl = test$fit)
  
mat
```

```{r}
library(viridis) #plots
mat %>% 
  group_by(Red, Green) %>% 
  summarise(chl = mean(chl)) %>% 
  ungroup() %>% 
  ggplot() +
  geom_raster(aes(x = Red, y = Green, fill = chl))+
  scale_fill_viridis_c(option = "inferno")+
  theme_minimal()
```

```{r}
mat %>% 
  group_by(Red, Blue) %>% 
  summarise(chl = mean(chl)) %>% 
  ungroup() %>% 
  ggplot() +
  geom_raster(aes(x = Red, y = Blue, fill = chl))+
  scale_fill_viridis_c(option = "inferno")+
  theme_minimal()
```

```{r}
mat %>% 
  group_by(Green, Blue) %>% 
  summarise(chl = mean(chl)) %>% 
  ungroup() %>% 
  ggplot() +
  geom_raster(aes(x = Green, y = Blue, fill = chl))+
  scale_fill_viridis_c(option = "inferno")+
  theme_minimal()
```

```{r}


pca <- princomp(dat_pig[,2:4])
library(vegan)

en = envfit(pca, dat_pig$chl_a_per_cm2, permutations = 999, na.rm = TRUE)



en

library(vergan)
library(factoextra)

dat_pca <- as.data.frame(pca$scores) %>% 
  bind_cols(dat_pig)

fviz_eig(pca, addlabels = TRUE)

fviz_pca_biplot(pca, label="var" ) + theme_minimal()


biplot(pca)
plot(en)
```
